{"version":3,"sources":["SVGIcons/PlayerAvatar.svg","SVGIcons/KingSlime.svg","SVGIcons/Coin.svg","SVGIcons/TBFLogo.svg","SVGIcons/StunnedIcon.svg","SVGIcons/PoisonedIcon.svg","SVGIcons/ReinforceIcon.svg","SVGIcons/StrengthIcon.svg","SVGIcons/VulnerableIcon.svg","SVGIcons/WeakenIcon.svg","SVGIcons/GreenSlime.svg","SVGIcons/BlueSlime.svg","SVGIcons/RedSlime.svg","SVGIcons/YellowSlime.svg","SVGIcons/PurpleSlime.svg","SVGIcons/GreySlime.svg","SVGIcons/Targeted.svg","SVGIcons/BossIcon.svg","SVGIcons/StoreIcon.svg","SVGIcons/Skull.svg","Redux/actions.js","Components/BattleArea.js","Components/HealthBar.js","Components/StatusIcons.js","Components/Player.js","Components/PlayerManager.js","Data/EnemyTypes.js","Components/Enemy.js","Components/EnemyManager.js","Components/StoreItem.js","Components/Store.js","Components/Map.js","Components/BattleEndScreen.js","Components/GameOver.js","Components/GameManager.js","Containers/GameManagerContainer.js","Components/MainScreen.js","Containers/MainScreenContainer.js","Components/Header.js","App.js","serviceWorker.js","Redux/reducer.js","index.js"],"names":["module","exports","GAME_STATES","STATUS_TIMERS","SKILL_NAMES","BattleArea","state","gameMessage","enemies","enemyTurn","setEnemyTurn","target","changeMessage","chooseTarget","changeState","console","log","handleNextState","gameState","length","useEffect","document","addEventListener","removeEventListener","onKeyPress","style","justifySelf","fontFamily","width","backgroundColor","border","gridRowStart","gridColumnStart","gridColumnEnd","fontWeight","fontStyle","fontSize","color","marginTop","marginBottom","display","justifyContent","marginRight","onClick","HealthBar","totalHealth","currentHealth","currentHealthStyle","name","height","opacity","StatusIcons","timers","iconStyle","map","timer","index","src","StunIcon","PoisonIcon","WeakenIcon","StrengthIcon","VulnerableIcon","ReinforceIcon","Player","playerData","plusStats","minusStats","flexDirection","alignItems","marginLeft","paddingTop","maxHp","hp","alt","PlayerAvatar","atk","def","gold","PlayerManager","player","dealDamage","setTimer","healTarget","playerObject","buttonStyle","levelStyle","alignSelf","gridTemplateColumns","gridColumnGap","gridRowGap","skillLevels","skill","onClickFunction","skillName","chance","Math","floor","random","BOSS_TYPES","skills","ENEMY_TYPES","Enemy","enemyIcon","enemyData","BlueSlime","YellowSlime","PurpleSlime","RedSlime","GreenSlime","GreySlime","KingSlime","position","top","left","Target","EnemyManager","waveNumber","bossFight","waitForResponse","setEnemies","waitingForResponse","usedBossAbility","toggleBossAbility","newEnemies","push","addRandomEnemy","numEnemies","i","pop","whichEnemy","enemy","StoreItem","skillString","item","playerGold","level","buySkill","itemName","cost","margin","purchased","zIndex","coin","disabled","Store","skillOne","skillTwo","skillThree","store","changeSkill","setStoreItems","changeWaveNumber","toggleRestock","restock","pickThreeSkills","Map","mapSquare","square","StoreIcon","BossIcon","BattleEndScreen","toggleBossFight","addToGold","setAttack","earnedTextStyle","determineSkillDrop","reduce","total","Gameover","resetGame","to","GameManager","reduceTimers","reducedTimers","boss","handlePoison","splitSide","poisonString","someonePoisoned","k","justifyItems","gridTemplateRows","skull","determineGameScreen","GameManagerContainer","connect","ownProps","dispatch","newState","type","enemyName","heal","healIndex","newIndex","timerToSet","newTimer","newMessage","newWaveNumber","goldToAdd","skillToChange","itemOne","itemTwo","itemThree","skillToBuy","newAttack","MainScreen","logo","MainScreenContainer","Header","Logo","App","className","exact","path","Boolean","window","location","hostname","match","initialState","defMod","atkMod","healDamageToTarget","action","calculateDamage","damage","armor","enemyTurm","dealDamageToTarget","decrementTimers","increaseSkill","skillToIncrease","setTimers","timerIndex","battleReducer","Object","assign","newAtk","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.117aecc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PlayerAvatar.5803b244.svg\";","module.exports = __webpack_public_path__ + \"static/media/KingSlime.b45f7767.svg\";","module.exports = __webpack_public_path__ + \"static/media/Coin.c4a4c1dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/TBFLogo.02e76c97.svg\";","module.exports = __webpack_public_path__ + \"static/media/StunnedIcon.23c36e92.svg\";","module.exports = __webpack_public_path__ + \"static/media/PoisonedIcon.ce3494e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReinforceIcon.c66e31ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/StrengthIcon.d084243e.svg\";","module.exports = __webpack_public_path__ + \"static/media/VulnerableIcon.569135d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/WeakenIcon.393e1fa3.svg\";","module.exports = __webpack_public_path__ + \"static/media/GreenSlime.2d563e54.svg\";","module.exports = __webpack_public_path__ + \"static/media/BlueSlime.0743adc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/RedSlime.d7817708.svg\";","module.exports = __webpack_public_path__ + \"static/media/YellowSlime.38cf640c.svg\";","module.exports = __webpack_public_path__ + \"static/media/PurpleSlime.bfb308d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/GreySlime.f83a7acf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Targeted.80475609.svg\";","module.exports = __webpack_public_path__ + \"static/media/BossIcon.0055e845.svg\";","module.exports = __webpack_public_path__ + \"static/media/StoreIcon.e0990a93.svg\";","module.exports = __webpack_public_path__ + \"static/media/Skull.6891ceb4.svg\";","export const CHANGE_STATE = 'CHANGE_STATE'\nexport const DEAL_DAMAGE = 'DEAL_DAMAGE'\nexport const CHOOSE_TARGET = 'CHOOSE_TARGET'\nexport const HEAL_TARGET = 'HEAL_TARGET'\nexport const SET_ENEMY_TURN = 'SET_ENEMY_TURN'\nexport const REDUCE_TIMERS = 'REDUCE_TIMERS'\nexport const SET_TIMER = 'SET_TIMER'\nexport const CHANGE_MESSAGE = 'CHANGE_MESSAGE'\nexport const STUN_TARGET = 'STUN_TARGET'\nexport const HANDLE_POISON = 'HANDLE_POISON'\nexport const SET_ENEMIES = 'SET_ENEMIES'\nexport const WAIT_FOR_RESPONSE = 'WAIT_FOR_RESPONSE'\nexport const CHANGE_WAVE_NUMBER = 'CHANGE_WAVE_NUMBER'\nexport const ADD_TO_GOLD = 'ADD_TO_GOLD'\nexport const CHANGE_SKILL = 'CHANGE_SKILL'\nexport const TOGGLE_BOSS_ABILITY = 'TOGGLE_BOSS_ABILITY'\nexport const TOGGLE_RESTOCK = 'TOGGLE_RESTOCK'\nexport const SET_STORE_ITEMS = 'SET_STORE_ITEMS'\nexport const BUY_SKILL = 'BUY_SKILL'\nexport const TOGGLE_BOSS_FIGHT = 'TOGGLE_BOSS_FIGHT'\nexport const RESET_GAME = 'RESET_GAME'\nexport const SET_ATTACK = 'SET_ATTACK'\n\nexport const GAME_STATES = {\n  BATTLE_START: 'battleStart',\n  ROUND_START: 'roundStart',\n  PLAYER_TURN: 'playerTurn',\n  BEFORE_ENEMY: 'beforeEnemy',\n  ENEMY_TURN: 'enemyTurn',\n  ROUND_END: 'roundEnd',\n  BATTLE_END: 'battleEnd',\n  STORE: 'store',\n  GAMEOVER: 'gameOver'\n}\n\nexport const STATUS_TIMERS = {\n  STUNNED: 0,\n  POISONED: 1,\n  WEAKENED: 2,\n  STRENGTHENED: 3,\n  VULNERABLE: 4,\n  REINFORCED: 5\n}\n\nexport const SKILL_NAMES = {\n  ATTACK: 0,\n  HEAL: 1,\n  STUN: 2,\n  POISON: 3,\n  WEAKEN: 4,\n  POWERUP: 5,\n  PIERCE: 6,\n  ARMORUP: 7\n}\n\n\nexport function changeMessage(newMessage) {\n  return { type: CHANGE_MESSAGE, newMessage: newMessage }\n}\n\nexport function changeState(newState) {\n  return { type: CHANGE_STATE, newState: newState }\n}\n\nexport function dealDamage(target) {\n  return { type: DEAL_DAMAGE, target: target }\n}\n\nexport function chooseTarget(enemyName) {\n  return { type: CHOOSE_TARGET, enemyName: enemyName}\n}\n\nexport function healTarget(target, heal, healIndex) {\n  return { type: HEAL_TARGET, target: target, heal: heal, healIndex: healIndex}\n}\n\nexport function setEnemyTurn(newIndex) {\n  return { type: SET_ENEMY_TURN, newIndex: newIndex}\n}\n\nexport function reduceTimers() {\n  return { type: REDUCE_TIMERS }\n}\n\nexport function setTimer(target, timerToSet, newTimer) {\n  return { type: SET_TIMER, target: target, timerToSet: timerToSet, newTimer: newTimer }\n}\n\nexport function handlePoison() {\n  return { type: HANDLE_POISON }\n}\n\nexport function setEnemies(enemies) {\n  return { type: SET_ENEMIES, enemies: enemies }\n}\n\nexport function waitForResponse() {\n  return { type: WAIT_FOR_RESPONSE }\n}\n\nexport function changeWaveNumber(newWaveNumber) {\n  return { type: CHANGE_WAVE_NUMBER, newWaveNumber: newWaveNumber}\n}\n\nexport function addToGold(goldToAdd) {\n  return { type: ADD_TO_GOLD, goldToAdd: goldToAdd }\n}\n\nexport function changeSkill(skillToChange) {\n  return { type: CHANGE_SKILL, skillToChange: skillToChange}\n}\n\nexport function toggleBossAbility() {\n  return { type: TOGGLE_BOSS_ABILITY }\n}\n\nexport function toggleRestock() {\n  return { type: TOGGLE_RESTOCK }\n}\n\nexport function setStoreItems(itemOne, itemTwo, itemThree) {\n  return { type: SET_STORE_ITEMS, itemOne: itemOne, itemTwo: itemTwo, itemThree: itemThree}\n}\n\nexport function buySkill(skillToBuy, cost) {\n  return { type: BUY_SKILL, skillToBuy: skillToBuy, cost: cost}\n}\n\nexport function toggleBossFight() {\n  return { type: TOGGLE_BOSS_FIGHT }\n}\n\nexport function resetGame() {\n  return { type: RESET_GAME}\n}\n\nexport function setAttack(newAttack) {\n  return { type: SET_ATTACK, newAttack: newAttack }\n}\n","import React, { useEffect } from 'react'\n\nimport {GAME_STATES} from '../Redux/actions'\n\nconst BattleArea = ({\n  state,\n  gameMessage,\n  enemies,\n  enemyTurn,\n  target,\n  setEnemyTurn,\n  chooseTarget,\n  changeMessage,\n  changeState}) => {\n\n  let messageStyle = {\n    fontFamily: 'ode,sans-serif',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    fontSize: '40px',\n    color: 'white',\n    marginTop: '15px',\n    marginBottom: '15px'\n  }\n\n  let battleAreaStyle = {\n    justifySelf: 'center',\n    fontFamily: 'atrament-web,sans-serif',\n    width: '500px',\n    backgroundColor: '#7d0e0e',\n    border: \"5px solid #4a0505\",\n    gridRowStart: 3,\n    gridColumnStart: 1,\n    gridColumnEnd: 'span 2'\n  }\n\n  let nextStyle = {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: '20px',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginRight: '10px',\n    marginBottom: '5px'\n  }\n\n  console.log(state)\n\n  let returnState = () => {\n    return state;\n  }\n\n  let handleNextState = () => {\n    let gameState = returnState();\n    console.log(\"handling next state with a key press\");\n    console.log(gameState)\n    switch(state) {\n      case GAME_STATES.ROUND_START:\n        changeMessage('Choose your move...')\n        changeState(GAME_STATES.PLAYER_TURN)\n        break;\n      case GAME_STATES.PLAYER_TURN:\n        changeState(GAME_STATES.BEFORE_ENEMY);\n        break;\n      case GAME_STATES.ENEMY_TURN:\n        if (enemyTurn === enemies.length - 1) {\n          setEnemyTurn(0)\n          changeMessage('Move to next round?')\n          changeState(GAME_STATES.ROUND_END);\n        } else {\n          setEnemyTurn(enemyTurn+1);\n        }\n        break;\n      case GAME_STATES.BEFORE_ENEMY:\n        changeState(GAME_STATES.ENEMY_TURN);\n        break;\n      default:\n        changeMessage('ROUND START')\n        changeState(GAME_STATES.ROUND_START)\n      break;\n    }\n  }\n\n  useEffect(() => {\n    console.log('inside use effect')\n    if (state !== GAME_STATES.PLAYER_TURN) {\n      document.addEventListener('keydown', handleNextState, false)\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleNextState, false)\n      }  \n    }\n\n  })\n\n  return (\n    <div onKeyPress={()=>console.log('were pressing a key')} style={battleAreaStyle}>\n      <div style={messageStyle}>{gameMessage}</div>\n      {\n        !(state === GAME_STATES.PLAYER_TURN) && <div style={nextStyle} onClick={()=>handleNextState()}>[SPACE]</div>\n      }\n    </div>\n  )\n}\n\nexport default BattleArea\n","import React from 'react';\n\nconst HealthBar = ({width, totalHealth, currentHealth, name}) => {\n\n  let calculateHealthBarSize = () => {\n    if (currentHealth === 0) {\n      return 0\n    }\n    return (currentHealth/ totalHealth * 100) + '%';\n  }\n\n  let HealthBarStyle = {\n    height: '20px',\n    width: '100px',\n    backgroundColor: 'black'\n  }\n\n  let currentHealthStyle = {\n    backgroundColor: 'green',\n    height: '20px',\n    width: calculateHealthBarSize(),\n  }\n\n  let healthTextStyle = {\n    color: 'white',\n    fontWeight: 'bold',\n    opacity: '0.5',\n    fontSize: '18px'\n  }\n\n  return (\n    <div>\n      <div style={HealthBarStyle}>\n        <div style={currentHealthStyle}><span style={healthTextStyle}>{currentHealth}/{totalHealth}</span></div>\n      </div>\n    </div>\n  )\n}\n\nexport default HealthBar;\n","import React from 'react'\n\nimport StunIcon from '../SVGIcons/StunnedIcon.svg'\nimport PoisonIcon from '../SVGIcons/PoisonedIcon.svg'\nimport ReinforceIcon from '../SVGIcons/ReinforceIcon.svg'\nimport StrengthIcon from '../SVGIcons/StrengthIcon.svg'\nimport VulnerableIcon from '../SVGIcons/VulnerableIcon.svg'\nimport WeakenIcon from '../SVGIcons/WeakenIcon.svg'\n\nconst StatusIcons = ({\n  timers\n}) => {\n\n  const statusIconStyle = {\n    marginTop: '3px',\n    display: 'flex',\n  }\n\n  const iconStyle = {\n    height: '20px',\n    width: '20px',\n    marginRight: '5px'\n  }\n\n  return(\n    <div style={statusIconStyle}>\n      {\n        timers.map((timer, index)=>{\n          if (timer > 0) {\n            switch(index){\n              case 0:\n                return <img src={StunIcon} style={iconStyle}></img>\n              case 1:\n                return <img src={PoisonIcon} style={iconStyle}></img>\n              case 2:\n                return <img src={WeakenIcon} style={iconStyle}></img>\n              case 3:\n                return <img src={StrengthIcon} style={iconStyle}></img>\n              case 4:\n                return <img src={VulnerableIcon} style={iconStyle}></img>\n              default:\n                return <img src={ReinforceIcon} style={iconStyle}></img>\n            }\n          }\n        })\n      }\n    </div>\n  )\n}\n\nexport default StatusIcons\n","import React from 'react'\n\nimport PlayerAvatar from '../SVGIcons/PlayerAvatar.svg'\nimport HealthBar from './HealthBar'\nimport StatusIcons from './StatusIcons'\n\nconst Player = ({playerData}) => {\n\n  let playerPanel1 = {\n    width:'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    marginLeft: '10px',\n    paddingTop: '10px',\n  }\n\n  let playerPanel2 = {\n    width: 'auto',\n    display: 'flex',\n    marginLeft: '10px',\n  }\n\n  let plusStats = {\n    color: 'green'\n  }\n\n  let minusStats = {\n    color: 'red'\n  }\n\n  let playerStatsPanel = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: '10px',\n    color: 'grey',\n    opacity: '0.8',\n    fontWeight: 'bold',\n    fontSize: '20px'\n  }\n\n  let playerNameStyle = {\n    color: 'grey',\n    fontWeight: 'bold',\n    opacity: '0.8',\n    fontSize: '25px'\n  }\n\n  let iconStyle = {\n    width: '100px',\n    height: '100px'\n  }\n\n  let playerFontStyle = {\n    fontFamily: 'ode,sans-serif',\n    fontWeight: '500',\n    fontStyle: 'normal',\n  }\n\n\n  return (\n    <div style={playerFontStyle}>\n      <div style={playerPanel1}>\n        <div style={playerNameStyle}>{playerData.name}</div>\n        <HealthBar\n          name = {playerData.name}\n          width = {100}\n          totalHealth = {playerData.maxHp}\n          currentHealth = {playerData.hp}\n        />\n        <StatusIcons timers={playerData.timers} />\n      </div>\n      <div style={playerPanel2}>\n        <div>\n          <img alt=\"player avatar\" style={iconStyle} src={PlayerAvatar} />\n        </div>\n        <div style={playerStatsPanel}>\n          <div>ATK: {playerData.atk}\n            {(playerData.timers[2] > 0 && !playerData.timers[3] > 0) && <span style={minusStats}>(-{playerData.atk})</span>}\n            {(!playerData.timers[2] > 0 && playerData.timers[3] > 0) && <span style={plusStats}>(+{playerData.atk})</span>}\n          </div>\n          <div>DEF: {playerData.def}\n            {(playerData.timers[4] > 0 && !playerData.timers[5] > 0) && <span style={minusStats}>(-{playerData.def})</span>}\n            {(!playerData.timers[4] > 0 && playerData.timers[5] > 0) && <span style={plusStats}>(+{playerData.def})</span>}\n          </div>\n          <div>GOLD: {playerData.gold}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Player;\n","import React from 'react'\n\nimport { GAME_STATES, STATUS_TIMERS } from '../Redux/actions'\nimport Player from './Player'\n\nconst PlayerManager = ({\n  state,\n  changeState,\n  player,\n  dealDamage,\n  changeMessage,\n  target,\n  enemies,\n  setTimer,\n  healTarget}) => {\n\n  if (state === GAME_STATES.PLAYER_TURN && player.timers[0] > 0) {\n    changeMessage('You are STUNNED');\n    changeState(GAME_STATES.BEFORE_ENEMY);\n  }\n\n  let playerObject = {\n    name: 'player',\n    hp: player.hp,\n    maxHp: player.maxHp,\n    atk: player.atk,\n    def: player.def,\n    gold: player.gold,\n    timers: player.timers\n  }\n\n  let playerManagerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center'\n}\n\nlet buttonStyle = {\n  fontSize: '20px',\n  color: 'white',\n  backgroundColor: 'darkRed',\n  fontFamily: 'ode,sans-serif',\n  fontWeight: '500',\n  fontStyle: 'normal',\n}\n\nlet levelStyle = {\n  fontSize: '15px',\n  opacity: '0.6'\n}\n\nlet buttonGroupStyle = {\n  display: 'grid',\n  gridTemplateColumns: '100px 100px',\n  gridColumnGap: '5px',\n  gridRowGap: '5px'\n}\n\n  return (\n      <div style={playerManagerStyle}>\n        <Player playerData = {playerObject} />\n        <div style={buttonGroupStyle}>\n        {\n          (state === GAME_STATES.PLAYER_TURN) && player.skillLevels.map((skill, index) => {\n            if (skill > 0) {\n              let onClickFunction;\n              let skillName;\n              let chance = Math.floor(Math.random() * 100)\n              switch(index) {\n                case 0:\n                  skillName = 'ATTACK'\n                  onClickFunction = () => {\n\n                    dealDamage('enemy', player.atk)\n                    changeMessage('The player is attacking: ' + enemies[target].name)\n                    changeState(GAME_STATES.BEFORE_ENEMY)\n                  }\n                  break;\n                case 1:\n                  skillName = 'HEAL'\n                  onClickFunction = () => {\n                    healTarget('player', 5, 0)\n                    changeMessage('The player is healing 5 HP')\n                    changeState(GAME_STATES.BEFORE_ENEMY)\n                  }\n                  break;\n                case 2:\n                  skillName = 'STUN'\n                  onClickFunction = () => {\n                    if (chance < 30) {\n                      changeMessage('The ' + enemies[target].name + ' has been STUNNED');\n                      setTimer('enemy', STATUS_TIMERS.STUNNED, 2)\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    } else {\n                      changeMessage('Oops :( The STUN failed');\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    }\n                  }\n                  break;\n                case 3:\n                  skillName = 'POISON'\n                  onClickFunction = () => {\n                    if (chance < 30) {\n                      changeMessage('The ' + enemies[target].name + ' has been POISONED');\n                      setTimer('enemy', STATUS_TIMERS.POISONED, 1)\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    } else {\n                      changeMessage('Oops :( The POISON failed');\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    }\n                  }\n                  break;\n                case 4:\n                  skillName = 'WEAKEN'\n                  onClickFunction = () => {\n                    if (chance < 30) {\n                      changeMessage('The ' + enemies[target].name + ' has been WEAKENED');\n                      setTimer('enemy', STATUS_TIMERS.WEAKENED, 2)\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    } else {\n                      changeMessage('Oops :( The WEAKEN failed');\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    }\n                  }\n                  break;\n                case 5:\n                  skillName = 'POWER UP'\n                  onClickFunction = () => {\n                    if (chance < 30) {\n                      changeMessage('You feel POWERED UP');\n                      setTimer('player', STATUS_TIMERS.STRENGTHENED, 2)\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    } else {\n                      changeMessage('Oops :( The POWER UP failed');\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    }\n                  }\n                  break;\n                case 6:\n                  skillName = 'PIERCE'\n                  onClickFunction = () => {\n                    if (chance < 30) {\n                      changeMessage('The ' + enemies[target].name + ' has been PIERCED');\n                      setTimer('enemy', STATUS_TIMERS.VULNERABLE, 2)\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    } else {\n                      changeMessage('Oops :( The PIERCE failed');\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    }\n                  }\n                  break;\n                default:\n                  skillName = 'ARMOR UP'\n                  onClickFunction = () => {\n                    if (chance < 30) {\n                      changeMessage('You feel PROTECTED');\n                      setTimer('player', STATUS_TIMERS.REINFORCED, 1)\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    } else {\n                      changeMessage('Oops :( The ARMOR UP failed');\n                      changeState(GAME_STATES.BEFORE_ENEMY)\n                    }\n                  }\n                  break;\n              }\n              return <button style={buttonStyle} onClick={onClickFunction}><div>{skillName}<div style={levelStyle}>LVL{skill}</div></div> </button>\n            }\n          })\n\n        }\n      </div>\n      </div>\n  )\n}\n\nexport default PlayerManager\n","const createTimers = () => {\n  return [\n    0, //stunTimer\n    0, //poisonedTimer\n    0, //weakenedTimer\n    0, //strengthenedTimer\n    0, //vulnerableTimer\n    0 //reinforcedTimer\n  ]\n}\n\nexport const BOSS_TYPES = [\n  {\n    name: 'King Slime',\n    maxHp: 30,\n    hp: 17,\n    def: 2,\n    atk: 2,\n    timers: createTimers(),\n    skills: ['ATTACK'],\n    gold: [8, 10]\n  },\n]\n\nexport const ENEMY_TYPES = [\n  {\n    name: 'BlueSlime',\n    maxHp: 10,\n    hp: 10,\n    def: 1,\n    atk: 2,\n    timers: createTimers(),\n    skills: ['ATTACK'],\n    gold: [2,3]\n  },\n  {\n    name: 'YellowSlime',\n    maxHp: 10,\n    hp: 10,\n    def: 1,\n    atk: 2,\n    timers: createTimers(),\n    skills: ['ATTACK', 'STUN'],\n    gold: [2,3]\n  },\n  {\n    name: 'PurpleSlime',\n    maxHp: 10,\n    hp: 10,\n    def: 1,\n    atk: 2,\n    timers: createTimers(),\n    skills: ['ATTACK', 'POISON'],\n    gold: [2,3]\n  },\n  {\n    name: 'RedSlime',\n    maxHp: 10,\n    hp: 10,\n    def: 1,\n    atk: 2,\n    timers: createTimers(),\n    skills: ['ATTACK', 'STRENGTH'],\n    gold: [2,3]\n  },\n  {\n    name: 'GreenSlime',\n    maxHp: 15,\n    hp: 10,\n    def: 1,\n    atk: 2,\n    timers : createTimers(),\n    skills: ['ATTACK', 'HEAL'],\n    gold: [2,3]\n  },\n  {\n    name: 'GreySlime',\n    maxHp: 15,\n    hp: 10,\n    def: 2,\n    atk: 2,\n    timers : createTimers(),\n    skills: ['ATTACK', 'REINFORCE'],\n    gold: [2,3]\n  }\n]\n","import React from 'react'\nimport HealthBar from './HealthBar'\n\n//enemy sprites\nimport GreenSlime from '../SVGIcons/GreenSlime.svg'\nimport BlueSlime from '../SVGIcons/BlueSlime.svg'\nimport RedSlime from '../SVGIcons/RedSlime.svg'\nimport YellowSlime from '../SVGIcons/YellowSlime.svg'\nimport PurpleSlime from '../SVGIcons/PurpleSlime.svg'\nimport GreySlime from '../SVGIcons/GreySlime.svg'\nimport Target from '../SVGIcons/Targeted.svg'\nimport StatusIcons from './StatusIcons'\n\n//boss sprites\nimport KingSlime from '../SVGIcons/KingSlime.svg'\n\nconst Enemy = ({enemyData, target, index, chooseTarget}) => {\n\n  let EnemyStyle = {\n    width: '200px',\n    marginTop: '10px',\n    fontFamily: 'ode,sans-serif',\n    fontWeight: '500',\n    fontStyle: 'normal',\n  }\n\n  let enemyPanel1 = {\n    width:'auto',\n    display: 'flex',\n    flexDirection:  'column',\n    alignItems: 'flex-start',\n    marginLeft: '10px',\n    paddingTop: '10px'\n  }\n\n  let enemyPanel2 = {\n    width: 'auto',\n    display: 'flex',\n    marginLeft: '10px',\n    fontSize: '20px'\n  }\n\n  let enemyStatsPanel = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    marginLeft: '10px',\n    color: 'grey',\n    opacity: '0.8',\n    fontWeight: 'bold'\n  }\n\n  let enemyNameStyle = {\n    color: 'grey',\n    fontWeight: 'bold',\n    opacity: '0.8',\n    fontSize: '25px'\n  }\n\n  let iconStyle = {\n    width: '100px',\n    height: '100px',\n    opacity: (enemyData.hp === 0) ? 0.2 : 1.0\n  }\n\n  let targetStyle = {\n    width: '100px',\n    height: '25px',\n    position: 'relative',\n    top: '-20px',\n    left: '10px'\n  }\n\n  let targetPanelStyle= {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n\n  let absoluteStyle = {\n    position: 'absolute'\n  }\n\n  let enemyIcon;\n\n  switch(enemyData.name) {\n    case 'BlueSlime':\n      enemyIcon = BlueSlime;\n      break;\n    case 'YellowSlime':\n      enemyIcon = YellowSlime;\n      break;\n    case 'PurpleSlime':\n      enemyIcon = PurpleSlime;\n      break;\n    case 'RedSlime':\n      enemyIcon = RedSlime;\n      break;\n    case 'GreenSlime':\n      enemyIcon = GreenSlime;\n      break;\n    case 'GreySlime':\n      enemyIcon = GreySlime;\n      break;\n    default:\n      enemyIcon = KingSlime;\n      break;\n  }\n\n  return (\n    <div onClick={()=>{chooseTarget(index)}} style={EnemyStyle}>\n      <div style={enemyPanel1}>\n        <div style={enemyNameStyle}>{enemyData.name}</div>\n        <HealthBar\n          name = {enemyData.name}\n          width = {100}\n          totalHealth = {enemyData.maxHp}\n          currentHealth = {enemyData.hp}\n        />\n        <StatusIcons timers={enemyData.timers}/>\n      </div>\n      <div style={enemyPanel2}>\n        <div style={targetPanelStyle}>\n          <img style={iconStyle} src={enemyIcon} />\n        </div>\n        <div style={enemyStatsPanel}>\n          <div>ATK: {enemyData.atk}</div>\n          <div>DEF: {enemyData.def}</div>\n        </div>\n      </div>\n      {\n        target &&\n        <div style={absoluteStyle}>\n          <img style={targetStyle} src={Target} />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Enemy\n","import React, { useEffect } from \"react\";\n\nimport { GAME_STATES, STATUS_TIMERS, addToGold, toggleBossAbility } from \"../Redux/actions\";\nimport { ENEMY_TYPES, BOSS_TYPES } from \"../Data/EnemyTypes\";\n\nimport Enemy from \"./Enemy\";\n\nconst EnemyManager = ({\n  state,\n  changeState,\n  enemies,\n  waveNumber,\n  target,\n  dealDamage,\n  chooseTarget,\n  setTimer,\n  changeMessage,\n  enemyTurn,\n  player,\n  bossFight,\n  waitForResponse,\n  setEnemies,\n  waitingForResponse,\n  healTarget,\n  setEnemyTurn,\n  usedBossAbility,\n  toggleBossAbility\n}) => {\n  let chance;\n\n  \n\n  useEffect(() => {\n    if (state === GAME_STATES.ENEMY_TURN) {\n      console.log(enemies[enemyTurn].hp);\n      if (enemies[enemyTurn].hp <= 0) {\n        console.log(\"the enemy is dead\");\n        if (enemyTurn !== enemies.length - 1) {\n          setEnemyTurn(enemyTurn + 1);\n        } else {\n          setEnemyTurn(0);\n          changeMessage(\"Move to next round?\");\n          changeState(GAME_STATES.ROUND_END);\n        }\n      } else if (enemies[enemyTurn].timers[STATUS_TIMERS.STUNNED]) {\n        changeMessage(enemies[enemyTurn].name + \" is STUNNED\");\n      } else if (player.hp <= 0) {\n        console.log('this should be in battle end')\n        changeState(GAME_STATES.GAMEOVER )\n      } else {\n        if (!waitingForResponse) {\n          let enemyAction =\n            enemies[enemyTurn].skills[\n              Math.floor(Math.random() * enemies[enemyTurn].skills.length)\n            ];\n          switch (enemyAction) {\n            case \"ATTACK\":\n              if (!waitingForResponse) {\n                dealDamage(\"player\");\n                changeMessage(\n                  enemies[enemyTurn].name +\n                    \" is DEALING \" +\n                    enemies[enemyTurn].atk +\n                    \" DAMAGE\"\n                );\n              }\n              break;\n            case \"HEAL\":\n              if (!waitingForResponse) {\n                healTarget(\"enemy\", 1, enemyTurn);\n                changeMessage(enemies[enemyTurn].name + \" is HEALING 1 HP\");\n              }\n              break;\n            case \"POISON\":\n              chance = Math.floor(Math.random() * 100);\n              if (chance < 30) {\n                setTimer(\"player\", STATUS_TIMERS.POISONED, 2);\n                changeMessage(\"You have been POISONED\");\n              } else {\n                changeMessage(\n                  enemies[enemyTurn].name + \" tried to POISON you but FAILED\"\n                );\n                waitForResponse();\n              }\n\n              break;\n            default:\n              chance = Math.floor(Math.random() * 100);\n              if (chance < 30) {\n                setTimer(\"player\", STATUS_TIMERS.STUNNED, 2);\n                changeMessage(\"You have been STUNNED\");\n              } else {\n                changeMessage(\n                  enemies[enemyTurn].name + \" tried to STUN you but FAILED\"\n                );\n                waitForResponse();\n              }\n          }\n        }\n      }\n    } else if (state === GAME_STATES.BATTLE_START) {\n      if (bossFight) {\n        let newEnemies = [];\n\n        newEnemies.push(BOSS_TYPES[0])\n\n        addRandomEnemy(newEnemies)\n\n        setEnemies(newEnemies);\n        changeState(GAME_STATES.ROUND_START);\n      } else {\n        let newEnemies = [];\n        let numEnemies;\n\n        if (waveNumber > 1) {\n          numEnemies = 3;\n        } else {\n          numEnemies = 2;\n        }\n\n        for (let i = 0; i < numEnemies; i++) {\n          addRandomEnemy(newEnemies);\n        }\n\n        setEnemies(newEnemies);\n        changeState(GAME_STATES.ROUND_START);\n      }\n    } else if (state === GAME_STATES.BEFORE_ENEMY) {\n      if (bossFight) {\n        if (!usedBossAbility && enemies[0].hp <= 15) {\n          if (enemies[1].hp <= 0) {\n            enemies.pop();\n            addRandomEnemy(enemies)\n            addRandomEnemy(enemies)\n          } else {\n            addRandomEnemy(enemies)\n          }\n          changeMessage('Slimes have arrived to defend the king')\n          toggleBossAbility();\n        }\n      }\n    }\n  });\n\n  let addRandomEnemy = (newEnemies) => {\n    let whichEnemy = Math.floor(Math.random() * 100);\n    if (whichEnemy < 10) {\n      newEnemies.push(ENEMY_TYPES[2]);\n    } else if (whichEnemy < 20) {\n      newEnemies.push(ENEMY_TYPES[4]);\n    } else if (whichEnemy < 60) {\n      newEnemies.push(ENEMY_TYPES[1]);\n    } else {\n      newEnemies.push(ENEMY_TYPES[0]);\n    }\n  }\n\n  let enemyManagerStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  };\n\n  return (\n    <div>\n      <div style={enemyManagerStyle}>\n        {enemies.map((enemy, index) => {\n          if (index === target) {\n            return (\n              <Enemy\n                chooseTarget={chooseTarget}\n                index={index}\n                enemyData={enemy}\n                target={true}\n              />\n            );\n          } else {\n            return (\n              <Enemy\n                chooseTarget={chooseTarget}\n                index={index}\n                enemyData={enemy}\n                target={false}\n              />\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default EnemyManager;\n","import React from \"react\";\nimport Player from \"./Player\";\nimport coin from \"../SVGIcons/Coin.svg\";\n\nconst StoreItem = ({ item, playerGold, level, buySkill, itemName }) => {\n  let skillString;\n  let cost = level * 5;\n\n  switch (item.skill) {\n    case 0:\n      skillString = \"ATTACK\";\n      break;\n    case 1:\n      skillString = \"HEAL\";\n      break;\n    case 2:\n      skillString = \"STUN\";\n      break;\n    case 3:\n      skillString = \"POISON\";\n      break;\n    case 4:\n      skillString = \"WEAKEN\";\n      break;\n    case 5:\n      skillString = \"POWER UP\";\n      break;\n    case 6:\n      skillString = \"PIERCE\";\n      break;\n    default:\n      skillString = \"ARMOR UP\";\n  }\n\n  console.log(\"This is the item\" + item);\n\n  let handleBuySkill = () => {\n    if (playerGold > cost) {\n      {\n        buySkill(itemName, cost);\n      }\n    } else {\n      console.log(\"not enough gold\");\n    }\n  };\n\n  let storeItemStyle = {\n    position: \"relative\",\n    width: \"200px\",\n    height: \"200px\",\n    margin: \"20px\",\n    border: \"3px solid black\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n\n  let soldOverlay = {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: \"10\",\n    backgroundColor: \"#8f6400 \",\n    display: \"flex\",\n    alignItems: \"flex-end\"\n  };\n\n  let soldText = {\n    fontSize: \"60px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    opacity: \"1\"\n  };\n\n  let costStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: \"10px\",\n    marginTop: '5px'\n  };\n\n  let iconStyle = {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"5px\"\n  };\n\n  let skillStyle = {\n    fontSize: \"30px\",\n    fontWeight: \"bold\"\n  };\n\n  let levelStyle = {\n    fontSize: \"15px\"\n  };\n\n  let costText = {\n      fontSize: '25px',\n      color: 'grey',\n      fontWeight: 'bold'\n  }\n\n  let buyStyle = {\n    fontSize: \"20px\",\n    fontFamily: 'ode,sans-serif',\n    fontWeight: '500',\n    fontStyle: 'normal',\n  };\n\n  return (\n    <div style={storeItemStyle}>\n      {item.purchased && (\n        <div style={soldOverlay}>\n          <span style={soldText}>SOLD</span>\n        </div>\n      )}\n      <div>\n        <div style={skillStyle}>{skillString}</div>\n        <div style={levelStyle}>LVL {level}</div>\n        <div style={costStyle}>\n          <span style={costText}>{cost}</span> <img style={iconStyle} src={coin}></img>\n        </div>\n        <button\n        disabled={item.purchased}\n        style={buyStyle}\n        onClick={() => {\n          handleBuySkill();\n        }}\n      >\n        {item.purchased ? \"Purchased\" : \"BUY\"}\n      </button>\n      </div>\n    </div>\n  );\n};\n\nexport default StoreItem;\n","import React, { useEffect } from \"react\";\n\nimport StoreItem from \"./StoreItem\";\nimport coin from \"../SVGIcons/Coin.svg\";\n\nimport { GAME_STATES } from '../Redux/actions'\n\nconst Store = ({\n  player,\n  changeSkill,\n  store,\n  setStoreItems,\n  buySkill,\n  waveNumber,\n  changeWaveNumber,\n  changeState,\n  toggleRestock\n}) => {\n  let skillOne, skillTwo, skillThree;\n\n  let storeItemStyle = {\n    display: \"flex\"\n  };\n\n  console.log(player.skillLevels);\n\n  let pickThreeSkills = () => {\n    skillOne = Math.floor(Math.random() * player.skillLevels.length);\n    skillTwo = Math.floor(Math.random() * player.skillLevels.length);\n\n    while (skillTwo === skillOne) {\n      skillTwo = Math.floor(Math.random() * player.skillLevels.length);\n    }\n\n    skillThree = Math.floor(Math.random() * player.skillLevels.length);\n\n    while (skillThree === skillOne || skillThree === skillTwo) {\n      skillThree = Math.floor(Math.random() * player.skillLevels.length);\n    }\n  };\n\n  useEffect(() => {\n    if (store.restock) {\n      pickThreeSkills();\n      setStoreItems(skillOne, skillTwo, skillThree);\n      toggleRestock();\n    }\n  });\n\n  let moveToNextRound = () => {\n    changeWaveNumber(waveNumber + 1);\n    changeState(GAME_STATES.BATTLE_START);\n  }\n\n  let storeTitleStyle = {\n    fontSize: \"50px\",\n    margin: 0\n  };\n\n  let storeStyle = {\n    fontFamily: 'ode,sans-serif',\n    fontWeight: '500',\n    fontStyle: 'normal',  \n  }\n\n  let iconStyle = {\n    width: \"30px\",\n    height: \"30px\",\n    marginLeft: \"5px\"\n  };\n\n  let goldTextStyle = {\n      color: 'grey',\n      fontWeight: 'bold',\n      fontSize: '30px'\n  }\n\n  let goldBox = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n  }\n\n  let nextRoundButtonStyle = {\n    fontFamily: 'ode,sans-serif',\n    fontWeight: '500',\n    fontStyle: 'normal',\n    fontSize: '25px'\n  }\n\n  return (\n    <div style={storeStyle}>\n      <div>\n        <h1 style={storeTitleStyle}>STORE</h1>\n        <div style={goldBox}>\n          <span style={goldTextStyle}>{player.gold}</span> <img style={iconStyle} src={coin}></img>\n        </div>\n      </div>\n      <div style={storeItemStyle}>\n        <StoreItem\n          playerGold={player.gold}\n          itemName=\"skillOne\"\n          item={store.skillOne}\n          buySkill={buySkill}\n          level={player.skillLevels[store.skillOne.skill] + 1}\n        />\n        <StoreItem\n          playerGold={player.gold}\n          itemName=\"skillTwo\"\n          item={store.skillTwo}\n          buySkill={buySkill}\n          level={player.skillLevels[store.skillTwo.skill] + 1}\n        />\n        <StoreItem\n          playerGold={player.gold}\n          itemName=\"skillThree\"\n          item={store.skillThree}\n          buySkill={buySkill}\n          level={player.skillLevels[store.skillThree.skill] + 1}\n        />\n      </div>\n      <button style={nextRoundButtonStyle} onClick={()=>{moveToNextRound()}}>Move to next round</button>\n    </div>\n  );\n};\n\nexport default Store;\n","import React from 'react';\nimport PlayerAvatar from '../SVGIcons/PlayerAvatar.svg'\nimport BossIcon from '../SVGIcons/BossIcon.svg'\nimport StoreIcon from '../SVGIcons/StoreIcon.svg'\n\nconst Map = ({\n  waveNumber\n}) => {\n\n  let mapSquare = {\n    width: '100px',\n    height: '100px',\n    backgroundColor: '#f5ce7f'\n  }\n\n  let mapStyle = {\n    width: '550px',\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginTop: '50px'\n  }\n\n  let exampleMap = [0, 1, 2, 3, 4]\n\n  return (\n    <div>\n      <div style={mapStyle}>\n        {\n          exampleMap.map((square, index) => {\n\n            if (waveNumber === index) {\n              return (\n                <div style={mapSquare}>\n                  <img alt=\"this is the players avatar\" src={PlayerAvatar}></img>\n                </div>\n              )\n            } else if (index === 2) {\n              return (\n                <div style={mapSquare}>\n                <img alt=\"this is the store icon\" src={StoreIcon}></img> \n               </div>  \n              )\n            \n          } else if (index === 4) {\n            return (\n              <div style={mapSquare}>\n              <img alt=\"this is the boss icon\" src={BossIcon}></img> \n             </div>  \n            )\n\n          } else {\n              return <div style={mapSquare}></div>\n            }\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Map\n","import React from \"react\";\n\nimport { GAME_STATES, SKILL_NAMES } from \"../Redux/actions\";\nimport Map from \"./Map\";\n\nconst BattleEndScreen = ({\n  enemies,\n  waveNumber,\n  changeWaveNumber,\n  changeState,\n  toggleBossFight,\n  addToGold,\n  player,\n  setAttack,\n  changeSkill\n}) => {\n  let roundEndStyle = {\n    gridRowStart: 2,\n    gridColumnStart: 1,\n    gridColumnEnd: \"span 2\",\n    backgroundColor: \"light blue\",\n    fontFamily: \"ode,sans-serif\",\n    fontWeight: \"500\",\n    fontStyle: \"normal\"\n  };\n\n  let earnedTextStyle = {\n    color: \"grey\",\n    fontWeight: \"bold\",\n    opacity: \"0.8\"\n  };\n\n  let goldTextStyle = {\n    color: \"#ffc745\",\n    fontWeight: \"bold\",\n    opacity: \"0.8\"\n  };\n\n  let victoryTextStyle = {\n    color: \"blue\",\n    fontWeight: \"bold\",\n    opacity: \"0.8\",\n    fontSize: \"100px\"\n  };\n\n  let buttonStyle = {\n    fontSize: \"25px\",\n    fontFamily: \"ode,sans-serif\",\n    fontWeight: \"500\",\n    fontStyle: \"normal\",\n    marginTop: \"20px\"\n  };\n\n  let battleEndScreenStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    fontSize: \"20px\"\n  };\n\n  let gold;\n  let skill;\n  let skillName;\n\n  let handleMoveToNextWave = () => {\n    if (waveNumber + 1 === 4) {\n      toggleBossFight();\n    }\n    changeWaveNumber(waveNumber + 1);\n    console.log(\"this is the new player.atk\", player.atk + 1);\n    setAttack(player.atk + 1);\n    addToGold(gold);\n    changeSkill(skill);\n    changeState(GAME_STATES.BATTLE_START);\n  };\n\n  let handleMoveToStore = () => {\n    changeWaveNumber(waveNumber + 1);\n    changeState(GAME_STATES.STORE);\n  };\n\n  let determineGold = () => {\n    gold = enemies.reduce((total, enemy) => {\n      let goldAmount =\n        Math.floor(Math.random() * (enemy.gold[1] - enemy.gold[0] + 1)) +\n        enemy.gold[0];\n      return total + goldAmount;\n    }, 0);\n\n    return gold;\n  };\n\n  let determineSkillDrop = () => {\n    skillName = Math.floor(Math.random() * 6);\n    switch (skillName) {\n      case 0:\n        skillName = \"STUN\";\n        skill = SKILL_NAMES.STUN;\n        break;\n      case 1:\n        skillName = \"POISON\";\n        skill = SKILL_NAMES.POISON;\n        break;\n      case 2:\n        skillName = \"WEAKEN\";\n        skill = SKILL_NAMES.WEAKEN;\n        break;\n      case 3:\n        skillName = \"POWERUP\";\n        skill = SKILL_NAMES.POWERUP;\n        break;\n      case 4:\n        skillName = \"PIERCE\";\n        skill = SKILL_NAMES.PIERCE;\n        break;\n      default:\n        skillName = \"ARMORUP\";\n        skill = SKILL_NAMES.ARMORUP;\n        break;\n    }\n\n    return skillName;\n  };\n\n  determineSkillDrop();\n\n  return (\n    <div style={roundEndStyle}>\n      <div style={battleEndScreenStyle}>\n        <div style={victoryTextStyle}>VICTORY</div>\n        <div style={earnedTextStyle}>You EARNED: </div>\n        <div style={goldTextStyle}>{determineGold()} GOLD</div>\n        <div style={earnedTextStyle}>\n          {determineSkillDrop()} LVL{player.skillLevels[skill] + 1}\n        </div>\n        <button\n          style={buttonStyle}\n          onClick={() => {\n            if (waveNumber === 1) {\n              handleMoveToStore();\n            } else {\n              handleMoveToNextWave();\n            }\n          }}\n        >\n          Next Wave\n        </button>\n        <Map waveNumber={waveNumber} />\n      </div>\n    </div>\n  );\n};\n\nexport default BattleEndScreen;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst Gameover = ({ resetGame }) => {\n  let roundEndStyle = {\n    gridRowStart: 2,\n    gridColumnStart: 1,\n    gridColumnEnd: \"span 2\",\n    backgroundColor: \"light blue\",\n    fontFamily: \"ode,sans-serif\",\n    fontWeight: \"500\",\n    fontStyle: \"normal\"\n  };\n\n  let battleEndScreenStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    fontSize: \"20px\"\n  };\n\n  let gameoverTextStyle = {\n    color: \"grey\",\n    fontWeight: \"bold\",\n    opacity: \"0.8\",\n    fontSize: \"100px\"\n  };\n\n  let buttonStyle = {\n      fontSize: '25px',\n      fontFamily: \"ode,sans-serif\",\n      fontWeight: \"500\",\n      fontStyle: \"normal\",\n      marginTop: '20px'\n  }\n\n  return (\n    <div style={roundEndStyle}>\n      <div style={battleEndScreenStyle}>\n        <div style={gameoverTextStyle}>GAMEOVER</div>\n        <button\n        style={buttonStyle}\n          onClick={() => {\n            resetGame();\n          }}\n        >\n          Play Again?\n        </button>\n        <Link to=\"/\">\n          <button style={buttonStyle}>Home Screen</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Gameover;\n","import React, { useEffect } from \"react\";\n\nimport BattleArea from \"./BattleArea\";\nimport PlayerManager from \"./PlayerManager\";\nimport EnemyManager from \"./EnemyManager\";\nimport BossManager from \"./BossManager\";\nimport Store from \"./Store\";\n\nimport BattleEndScreen from \"./BattleEndScreen\";\nimport Gameover from \"./GameOver\";\n\nimport skull from \"../SVGIcons/Skull.svg\";\n\nimport { GAME_STATES, STATUS_TIMERS } from \"../Redux/actions\";\nimport { ENEMY_TYPES } from \"../Data/EnemyTypes\";\n\nconst GameManager = ({\n  setAttack,\n  state,\n  changeState,\n  player,\n  enemies,\n  bossFight,\n  dealDamage,\n  chooseTarget,\n  healTarget,\n  resetGame,\n  enemyTurn,\n  setEnemyTurn,\n  store,\n  setEnemies,\n  buySkill,\n  addToGold,\n  reduceTimers,\n  reducedTimers,\n  setTimer,\n  boss,\n  waitForResponse,\n  changeSkill,\n  toggleBossFight,\n  waveNumber,\n  changeMessage,\n  setStoreItems,\n  toggleRestock,\n  changeWaveNumber,\n  gameMessage,\n  handlePoison,\n  waitingForResponse,\n  usedBossAbility,\n  toggleBossAbility,\n  target\n}) => {\n  const gridStyle = {\n    display: \"grid\",\n    justifyItems: \"center\",\n    gridTemplateColumns: \"auto\",\n    gridTemplateRows: \"auto auto auto\"\n  };\n\n  const bossTitleStyle = {\n    display: \"flex\",\n    fontFamily: \"ode,sans-serif\",\n    fontWeight: \"500\",\n    fontStyle: \"normal\",\n    fontSize: \"40px\",\n    color: \"red\"\n  };\n\n  const skullIconStyle = {\n    width: \"50px\",\n    height: \"50px\"\n  };\n\n  const gameManagerStyle = {\n    gridRowStart: 1,\n    gridColumnStart: 1,\n    gridColumnEnd: \"span 2\",\n    color: \"grey\",\n    opacity: \"0.8\",\n    fontWeight: \"bold\"\n  };\n\n  const roundTextStyle = {\n    fontFamily: \"ode,sans-serif\",\n    fontWeight: \"500\",\n    fontStyle: \"normal\",\n    fontSize: \"40px\"\n  };\n\n  const splitSide = {\n    justifySelf: \"center\",\n    display: \"grid\",\n    gridColumnEnd: \"span 2\",\n    gridTemplateColumns: \"auto auto\",\n    width: \"500px\"\n  };\n\n  useEffect(() => {\n    if (state === GAME_STATES.ROUND_START) {\n      let poisonString = \"\";\n      let someonePoisoned = false;\n\n      if (player.timers[STATUS_TIMERS.POISONED] > 0) {\n        someonePoisoned = true;\n        poisonString += \"YOU \";\n      }\n\n      for (let i = 0; i < enemies.length; i++) {\n        if (enemies[i].timers[STATUS_TIMERS.POISONED] > 0) {\n          someonePoisoned = true;\n          poisonString += enemies[i].name + \" \";\n        }\n      }\n\n      poisonString += \"are poisoned, taking poison DAMAGE\";\n\n      if (someonePoisoned && !waitingForResponse) {\n        handlePoison();\n        changeMessage(poisonString);\n      }\n    }\n  });\n\n  let determineGameScreen = () => {\n    switch (state) {\n      case GAME_STATES.BATTLE_END:\n        return (\n          <BattleEndScreen\n            enemies={enemies}\n            waveNumber={waveNumber}\n            changeWaveNumber={changeWaveNumber}\n            changeState={changeState}\n            toggleBossFight={toggleBossFight}\n            setAttack={setAttack}\n            player={player}\n            addToGold={addToGold}\n            changeSkill={changeSkill}\n          />\n        );\n      case GAME_STATES.GAMEOVER:\n        return <Gameover resetGame={resetGame} />;\n      case GAME_STATES.STORE:\n        return (\n          <Store\n            changeSkill={changeSkill}\n            player={player}\n            store={store}\n            buySkill={buySkill}\n            setStoreItems={setStoreItems}\n            toggleRestock={toggleRestock}\n            changeState={changeState}\n            waveNumber={waveNumber}\n            changeWaveNumber={changeWaveNumber}\n          />\n        );\n      default:\n        return (\n          <>\n            <div style={splitSide}>\n              <PlayerManager\n                state={state}\n                changeState={changeState}\n                player={player}\n                healTarget={healTarget}\n                changeMessage={changeMessage}\n                target={target}\n                enemies={enemies}\n                setTimer={setTimer}\n                dealDamage={dealDamage}\n              />\n              <EnemyManager\n                state={state}\n                waitForResponse={waitForResponse}\n                changeState={changeState}\n                player={player}\n                enemies={enemies}\n                setTimer={setTimer}\n                chooseTarget={chooseTarget}\n                waveNumber={waveNumber}\n                changeMessage={changeMessage}\n                usedBossAbility={usedBossAbility}\n                toggleBossAbility={toggleBossAbility}\n                enemyTurn={enemyTurn}\n                setEnemies={setEnemies}\n                setEnemyTurn={setEnemyTurn}\n                target={target}\n                healTarget={healTarget}\n                bossFight={bossFight}\n                waitingForResponse={waitingForResponse}\n                dealDamage={dealDamage}\n              />\n            </div>\n            <BattleArea\n              state={state}\n              gameMessage={gameMessage}\n              enemyTurn={enemyTurn}\n              enemies={enemies}\n              setEnemyTurn={setEnemyTurn}\n              changeMessage={changeMessage}\n              target={target}\n              chooseTarget={chooseTarget}\n              changeState={changeState}\n            />\n          </>\n        );\n    }\n  };\n\n  if (state === GAME_STATES.BEFORE_ENEMY) {\n    let totalEnemyHp = enemies.reduce((total, enemy) => {\n      return total + enemy.hp;\n    }, 0);\n\n    if (totalEnemyHp <= 0) {\n      changeMessage(\"Next wave?\");\n      changeState(GAME_STATES.BATTLE_END);\n    }\n\n    if (enemies[target].hp === 0) {\n      for (let k = 0; k < enemies.length; k++) {\n        if (enemies[k].hp !== 0) {\n          chooseTarget(k);\n          break;\n        }\n      }\n    }\n  }\n\n  if (state === GAME_STATES.ROUND_END) {\n    if (!reducedTimers) {\n      reduceTimers();\n    }\n  }\n\n  return (\n    <div style={gridStyle}>\n      <h1 style={roundTextStyle}>ROUND {waveNumber + 1}</h1>\n      {bossFight && (\n        <div style={bossTitleStyle}>\n          BOSS <img style={skullIconStyle} alt=\"boss skull\" src={skull} /> FIGHT\n        </div>\n      )}\n      <div>{determineGameScreen()}</div>\n    </div>\n  );\n};\n\nexport default GameManager;\n","import { connect } from 'react-redux'\nimport {\n  changeState,\n  dealDamage,\n  chooseTarget,\n  healTarget,\n  setEnemyTurn,\n  reduceTimers,\n  setTimer,\n  waitForResponse,\n  changeWaveNumber,\n  handlePoison,\n  changeSkill,\n  addToGold,\n  toggleRestock,\n  setStoreItems,\n  setAttack,\n  buySkill,\n  toggleBossFight,\n  toggleBossAbility,\n\n  setEnemies,\n  resetGame,\n  changeMessage} from '../Redux/actions'\n\nimport GameManager from '../Components/GameManager'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    state: state.state,\n    player: state.player,\n    enemies: state.enemies,\n    target: state.target,\n    store: state.store,\n    enemyTurn: state.enemyTurn,\n    reducedTimers: state.reducedTimers,\n    gameMessage: state.gameMessage,\n    waitingForResponse: state.waitingForResponse,\n    waveNumber: state.waveNumber,\n    boss: state.boss,\n    bossFight: state.bossFight,\n    usedBossAbility: state.usedBossAbility\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    changeState: (newState) => {\n      dispatch(changeState(newState))\n    },\n    dealDamage: (target) => {\n      dispatch(dealDamage(target))\n    },\n    chooseTarget: (enemyName) => {\n      dispatch(chooseTarget(enemyName))\n    },\n    healTarget: (target, heal, healIndex) => {\n      dispatch(healTarget(target, heal, healIndex))\n    },\n    setEnemyTurn: (newIndex) => {\n      dispatch(setEnemyTurn(newIndex))\n    },\n    reduceTimers: () => {\n      dispatch(reduceTimers())\n    },\n    setTimer: (target, timerToSet, newTimer) => {\n      dispatch(setTimer(target, timerToSet, newTimer))\n    },\n    changeMessage: (newMessage) => {\n      dispatch(changeMessage(newMessage))\n    },\n    handlePoison: () => {\n      dispatch(handlePoison())\n    },\n    setEnemies: (enemies) => {\n      dispatch(setEnemies(enemies))\n    },\n    waitForResponse: () => {\n      dispatch(waitForResponse())\n    },\n    changeWaveNumber: (newWaveNumber) => {\n      dispatch(changeWaveNumber(newWaveNumber))\n    },\n    addToGold: (goldToAdd) => {\n      dispatch(addToGold(goldToAdd))\n    },\n    changeSkill: (skillToChange) => {\n      dispatch(changeSkill(skillToChange))\n    },\n    toggleBossAbility: (skillToChange) => {\n      dispatch(toggleBossAbility())\n    },\n    toggleRestock: () => {\n      dispatch(toggleRestock())\n    },\n    setStoreItems: (itemOne, itemTwo, itemThree) => {\n      dispatch(setStoreItems(itemOne, itemTwo, itemThree))\n    },\n    buySkill: (skillToBuy, cost) => {\n      dispatch(buySkill(skillToBuy, cost))\n    },\n    toggleBossFight: () => {\n      dispatch(toggleBossFight())\n    },\n    resetGame: () => {\n      dispatch(resetGame())\n    },\n    setAttack: (newAttack) => {\n      dispatch(setAttack(newAttack))\n    }\n  }\n}\n\nconst GameManagerContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameManager)\n\nexport default GameManagerContainer;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport logo from '../SVGIcons/TBFLogo.svg'\n\nconst MainScreen = ({\n    resetGame\n}) => {\n\n    let logoStyle = {\n        height: '300px',\n\n    }\n\n    let buttonStyle = {\n        fontSize: '30px',\n        fontFamily: 'ode,sans-serif',\n        fontWeight: '500',\n        fontStyle: 'normal',\n        marginTop: '20px'\n    }\n\n    let flexStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        justifyContent: 'center'\n    }\n\n    return(\n        <div style={flexStyle}>\n            <img style={logoStyle} src={logo} alt=\"game logo\"></img>\n            <Link to='/game'>\n                <button style={buttonStyle} onClick={()=>{resetGame()}}>START GAME</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default MainScreen","import { connect } from 'react-redux'\n\nimport {\n    resetGame\n} from '../Redux/actions'\n\nimport MainScreen from '../Components/MainScreen'\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        resetGame: () => {\n            dispatch(resetGame())\n          }\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n      state: state.state,\n    }\n  }\n\nconst MainScreenContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MainScreen)\n\nexport default MainScreenContainer;","import React from 'react'\nimport Logo from '../SVGIcons/TBFLogo.svg'\n\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n\n    let HeaderStyle = {\n        height: '80px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n\n    let logoStyle = {\n        height: '70px'\n    }\n\n    return (\n        <div style={HeaderStyle}>\n            <Link to=\"/\">\n            <img style={logoStyle} src={Logo} />\n            </Link>\n\n        </div>\n    )\n}\n\nexport default Header","import React from 'react';\nimport './App.css';\nimport GameManagerContainer from './Containers/GameManagerContainer'\nimport MainScreenContainer from './Containers/MainScreenContainer'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nimport Header from './Components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>  \n        <Switch>\n          <Route exact path=\"/\"> \n            <MainScreenContainer />\n          </Route>\n          <Route path=\"/game\">\n            <Header /> \n            <GameManagerContainer />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_STATE,\n  DEAL_DAMAGE,\n  CHOOSE_TARGET,\n  HEAL_TARGET,\n  GAME_STATES,\n  REDUCE_TIMERS,\n  SET_ENEMY_TURN,\n  HANDLE_POISON,\n  SET_TIMER,\n  STATUS_TIMERS,\n  CHANGE_MESSAGE,\n  CHANGE_WAVE_NUMBER,\n  WAIT_FOR_RESPONSE,\n  ADD_TO_GOLD,\n  SET_ENEMIES,\n  TOGGLE_BOSS_ABILITY,\n  CHANGE_SKILL,\n  TOGGLE_RESTOCK,\n  TOGGLE_BOSS_FIGHT,\n  SET_STORE_ITEMS,\n  RESET_GAME,\n  SET_ATTACK,\n  BUY_SKILL\n} from './actions';\n\nconst createTimers = () => {\n  return [\n    0, //stunTimer\n    0, //poisonedTimer\n    0, //weakenedTimer\n    0, //strengthenedTimer\n    0, //vulnerableTimer\n    0 //reinforcedTimer\n  ]\n}\n\nconst initialState = {\n  state: GAME_STATES.BATTLE_START,\n  player: {\n    maxHp: 20,\n    hp: 20 ,\n    def: 2,\n    defMod: 0,\n    atk: 2,\n    atkMod: 0,\n    gold: 200,\n    timers: createTimers(),\n    skillLevels: [\n      1, //Attack\n      1, //Heal\n      0, //Stun\n      0, //Poison\n      0, //Weaken\n      0, //Powerup\n      0, //Pierce\n      0, //Reinforce\n    ],\n    skills: ['ATTACK', 'HEAL', 'STUN']\n  },\n  store: {\n    restock: true,\n    skillOne: {\n      skill: 1,\n      purchased: false\n    },\n    skillTwo: {\n      skill: 2,\n      purchased: false\n    },\n    skillThree: {\n      skill: 3, \n      purchased: false\n    }\n  },\n  enemies: [],\n  bossFight: false,\n  usedBossAbility: false,\n  target: 0,\n  enemyTurn: 0,\n  reducedTimers: false,\n  waveNumber: 0,\n  gameMessage: 'The battle has begun',\n  waitingForResponse: false,\n}\n\nlet healDamageToTarget = (state, action) => {\n  if (action.target === 'player') {\n    return {\n      ...state,\n      player: {\n        ...state.player,\n        hp: ((state.player.hp + action.heal) > state.player.maxHp) ? state.player.maxHp : (state.player.hp + action.heal)\n      },\n      waitingForResponse: true\n    }\n  } else {\n    return {\n      ...state,\n      enemies: state.enemies.map((item, index) => {\n        if (index !== action.healIndex) {\n          return item\n        } else {\n          return {\n            ...item,\n            hp: ((item.hp + action.heal) > item.maxHp) ? item.maxHp : (item.hp + action.heal)\n          }\n        }\n      }),\n      waitingForResponse: true\n    }\n  }\n}\n\nlet calculateDamage = (state, action) => {\n  let damage\n  let armor\n\n  if (action.target === 'enemy') {\n    damage = state.player.atk;\n    if (state.player.timers[STATUS_TIMERS.STRENGTHENED] > 0) {\n      damage += state.player.atk\n    }\n    if (state.player.timers[STATUS_TIMERS.WEAKENED] > 0) {\n      damage -= state.player.atk\n    }\n\n    armor = state.enemies[state.target].def;\n    if (state.enemies[state.target].timers[STATUS_TIMERS.REINFORCED] > 0) {\n      armor += state.enemies[state.target].def\n    }\n    if (state.enemies[state.target].timers[STATUS_TIMERS.VULNERABLE] > 0) {\n      armor -= state.enemies[state.target].def\n    }\n  } else {\n    damage = state.enemies[state.target].atk;\n    if (state.enemies[state.target].timers[STATUS_TIMERS.STRENGTHENED] > 0) {\n      damage += state.enemies[state.enemyTurn].atk;\n    }\n\n    if (state.enemies[state.target].timers[STATUS_TIMERS.WEAKENED] > 0) {\n      damage += state.enemies[state.enemyTurm].atk\n    }\n\n    armor = state.player.def;\n    if (state.player.timers[STATUS_TIMERS.REINFORCED] > 0) {\n      armor += state.player.def;\n    }\n\n    if (state.player.timers[STATUS_TIMERS.VULNERABLE] > 0) {\n      armor -= state.player.def;\n    }\n  }\n\n  if (armor > damage) {\n    return damage / 2\n  } else {\n    return damage\n  }\n}\n\n\n\n\nlet dealDamageToTarget = (state, action) => {\n  if (action.target === 'player') {\n    return {\n      ...state,\n      player: {\n        ...state.player,\n        hp: state.player.hp - calculateDamage(state, action)\n      },\n      waitingForResponse: true\n    }\n  } else if (action.target === 'boss') {\n    return {\n      ...state,\n      boss: state.boss.map((item, index) => {\n        if (index !== state.target) {\n          return item \n        } else {\n          return {\n            ...item,\n            hp: (item.hp - calculateDamage(state, action)) < 0 ? 0 : item.hp - calculateDamage(state, action)\n          }\n        }\n      })\n    }\n  } else {\n    return {\n      ...state,\n      enemies: state.enemies.map((item, index) => {\n        if (index !== state.target) {\n          return item\n        } else {\n          return {\n            ...item,\n            hp: (item.hp - calculateDamage(state, action)) < 0 ? 0 : item.hp - calculateDamage(state, action)\n          }\n        }\n      }),\n      waitingForResponse: true\n    }\n  }\n}\n\nconst decrementTimers = (timers) => {\n  let timeCheck =  timers.map((timer) => {\n    if (timer > 0) {\n      return timer - 1;\n    } else {\n      return 0\n    }\n  })\n\n  return timeCheck\n}\n\nconst handlePoison = (state, action) => {\n  return {\n    ...state,\n    player: {\n      ...state.player,\n      hp: (state.player.timers[STATUS_TIMERS.POISONED] > 0) ? state.player.hp - 1 : state.player.hp\n    },\n    enemies: state.enemies.map((enemy) => {\n        return {\n          ...enemy,\n          hp: (enemy.timers[STATUS_TIMERS.POISONED] > 0) ? enemy.hp - 1 : enemy.hp\n        }\n    }),\n    waitingForResponse: true\n  }\n}\n\nconst increaseSkill = (skills, skillToIncrease) => {\n  return skills.map((skill, index) => {\n    if (index === skillToIncrease) {\n      return skill + 1\n    } else {\n      return skill\n    }\n  })\n}\n\nconst setTimers = (state, action) => {\n  if (action.target === 'player') {\n    return {\n      ...state,\n      player: {\n        ...state.player,\n        timers: state.player.timers.map((timer, index) => {\n          if (index === action.timerToSet){\n            return action.newTimer;\n          } else {\n            return timer;\n          }\n        })\n      },\n      waitingForResponse: true\n    }\n  } else {\n    return {\n      ...state,\n      enemies: state.enemies.map((enemy, index) => {\n        if (index === state.target) {\n          return {\n            ...enemy,\n            timers: enemy.timers.map((timer, timerIndex) => {\n              if (timerIndex === action.timerToSet) {\n                return action.newTimer;\n              } else {\n                return timer;\n              }\n            })\n          }\n        } else {\n          return enemy\n        }\n      }),\n      waitingForResponse: true\n    }\n  }\n}\n\n\nconst battleReducer = (state = initialState, action) => {\n  console.log(action.type)\n  switch(action.type) {\n    case CHANGE_STATE:\n      return Object.assign({}, state, {\n        ...state,\n        state: action.newState,\n        reducedTimers: false,\n        waitingForResponse: false\n      })\n    case DEAL_DAMAGE:\n      return Object.assign({}, state,\n        dealDamageToTarget(state, action)\n      )\n    case CHOOSE_TARGET:\n      return Object.assign({}, state, {\n        ...state,\n        target: action.enemyName\n      }\n      )\n    case HEAL_TARGET:\n      return Object.assign({}, state,\n        healDamageToTarget(state, action)\n      )\n    case SET_ENEMY_TURN:\n      return Object.assign({}, state, {\n        ...state,\n        enemyTurn: action.newIndex,\n        waitingForResponse: false\n      })\n    case REDUCE_TIMERS:\n      return Object.assign({}, state,\n      {\n        ...state,\n        player: {\n          ...state.player,\n          timers: decrementTimers(state.player.timers)\n        },\n        enemies: state.enemies.map((enemy) => {\n          return {\n            ...enemy,\n            timers: decrementTimers(enemy.timers)\n          }\n        }),\n        reducedTimers: true\n      })\n    case SET_TIMER:\n      return Object.assign({}, state,\n        setTimers(state, action))\n    case CHANGE_MESSAGE:\n      return Object.assign({}, state,\n        {\n          ...state,\n          gameMessage: action.newMessage\n        }\n      )\n    case HANDLE_POISON:\n      return Object.assign({}, state,\n        handlePoison(state, action)\n      )\n    case SET_ENEMIES:\n      return Object.assign({}, state,\n        {\n          ...state,\n          enemies: action.enemies\n        }\n      )\n    case WAIT_FOR_RESPONSE:\n      return Object.assign({}, state,\n        {\n          ...state,\n          waitingForResponse: true\n        }\n      )\n    case CHANGE_WAVE_NUMBER:\n      return Object.assign({}, state,\n      {\n        ...state,\n        waveNumber: action.newWaveNumber\n      })\n    case ADD_TO_GOLD:\n      return Object.assign({}, state, {\n        ...state,\n        player: {\n          ...state.player,\n          gold: state.player.gold + action.goldToAdd\n        }\n      })\n    case CHANGE_SKILL:\n        return Object.assign({}, state, {\n          ...state,\n          player: {\n            ...state.player,\n            skillLevels: increaseSkill(state.player.skillLevels, action.skillToChange)  \n          }\n        })\n    case TOGGLE_BOSS_ABILITY:\n        return Object.assign({}, state, {\n          ...state,\n          usedBossAbility: !state.usedBossAbility\n        })\n    case TOGGLE_RESTOCK:\n        return Object.assign({}, state, {\n          ...state,\n          store: {\n            ...state.store,\n            restock: !state.store.restock\n          }\n        })\n    case SET_STORE_ITEMS:\n        return Object.assign({}, state, {\n          ...state,\n          store: {\n            ...state.store,\n            skillOne: {\n              skill: action.itemOne,\n              purchased: false\n            },\n            skillTwo: {\n              skill: action.itemTwo,\n              purchased: false\n            },\n            skillThree: {\n              skill: action.itemThree,\n              purchased: false\n            },\n          }\n        })\n    case BUY_SKILL:\n      return Object.assign({}, state, {\n        ...state,\n        player: {\n          ...state.player,\n          gold: state.player.gold - action.cost,\n          skillLevels: increaseSkill(state.player.skillLevels, state.store[action.skillToBuy].skill),\n        },\n        store: {\n          ...state.store,\n          [action.skillToBuy]: {\n            ...state.store[action.skillToBuy],\n            purchased: true\n          }\n        }\n      })\n    case RESET_GAME:\n      console.log('inside reset game')\n      return Object.assign({}, state, {\n        ...initialState\n      })\n    case TOGGLE_BOSS_FIGHT:\n      return Object.assign({}, state, {\n        ...state,\n        target: 0,\n        bossFight: !state.bossFight\n      })\n    case SET_ATTACK:\n      console.log('inside set attack newatk', action.newAtk)\n      return Object.assign({}, state, {\n        ...state,\n        player: {\n          ...state.player,\n          atk: action.newAttack\n        }\n      })\n    default:\n      return state\n\n  }\n}\n\nexport default battleReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport battleReducer from './Redux/reducer'\n\nconst store = createStore(battleReducer)\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App /> \n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}